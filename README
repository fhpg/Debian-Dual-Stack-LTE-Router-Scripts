howto setup a raspberry pi dual-stack (IPv4 and IPv6) router with LTE SIM7600G HAT on RaspiOS alias Debian stable (bullseye)

I worked several days on this to find everything out. After reading tons of posts, docs and rfcs spread over the internet, these notes are the working essence of my efforts.
The motivation of this was not only to learn a lot about networking (again - my knowledge became a bit rusted over the years), 
but also to have a router that is completely under my control and built on free software. Because I can update and maintain it myself, this is a very sustainable solution for me.
I just want to share this with you.

install raspios lite (in case of raspi v2 install arhmf version, not arm64)
copy image to sd-card via dd
optional for headless access to rpi: mount boot (fat32) partition of sd-card and touch empty file named "ssh" to have ssh console enabled
boot up and login (remotely) with pi:raspberry
change standard password for pi
optional: modify apt to use apt-cacher
optional: setup ssh authorized-keys
optional: hostnamectl set-hostname rpi1
optional: set timezone to berlin using dpkg-reconfigure tzdata
optional: run raspi-config and expand file system (from advanced options) and reboot
apt install nftables libqmi-utils dnsmasq socat
optional: apt install minicom tcpdump for analysis
disable any running dhcp client via systemctl disable dhcpcd.service
if present: also stop and disable ModemManager


create file /etc/dnsmasq.d/dnsmasq-lte.conf
# contains two gateways (tag a and b) to not interfere some clients while setting up this router
#####################################
server=208.67.222.222
server=208.67.220.220
interface=eth0
bogus-priv
dhcp-range=set:a,192.168.1.2,192.168.1.100
dhcp-range=set:b,192.168.1.101,192.168.1.199
dhcp-range=::1,constructor:eth0,ra-stateless,ra-names,15m
enable-ra
ra-param=eth0,mtu:wwan0,60
dhcp-host=XX:XX:XX:XX:XX:XX,client1,192.168.1.8
dhcp-host=XX:XX:XX:XX:XX:XX,client2,192.168.1.8
dhcp-host=XX:XX:XX:XX:XX:XX,XX:XX:XX:XX:XX:XX,laptop1,192.168.1.10
dhcp-host=XX:XX:XX:XX:XX:XX,phone1,192.168.1.12
dhcp-host=XX:XX:XX:XX:XX:XX,tablet1,192.168.1.13,set:b
dhcp-host=XX:XX:XX:XX:XX:XX,tablet2,192.168.1.14,set:b
dhcp-host=XX:XX:XX:XX:XX:XX,phone2,192.168.1.15,set:b
dhcp-host=XX:XX:XX:XX:XX:XX,printer1,192.168.1.100
dhcp-option=option6:dns-server,[::]
dhcp-option=tag:b,option:router,192.168.1.1
dhcp-option=tag:b,option:dns-server,192.168.1.1
dhcp-option=tag:a,option:router,192.168.1.7
dhcp-option=tag:a,option:dns-server,192.168.1.7
# option 26 is mtu. not necessary to be set via dhcp, it will rather be mangled by nftables
#dhcp-option=26,1430
#####################################


create file /etc/network/interfaces.d/lan
# this (dhcp serving) router should get it's own ip statically
#####################################
auto eth0
iface eth0 inet static
address 192.168.1.7/24
#####################################

copy lte.config to /etc

copy lte.service to /etc/systemd/system/ and then enable it with systemctl enable lte.service

use the beside scripts for initialization of the modem, as well as for connection and disconnect
copy them to /opt/lte/

lteinit.sh - use this once after system startup
lteconn.sh - to connect
ltedisconn.sh - to disconnect
ltestatus.sh - to show current connection status and make test pings
ltesignal.sh - to show the signal strength
ltewatchdog.sh - to reconnect if the connection is lost
